spring:
  application:
    name: spring-cloud-gateway

  # Vite 빌드 산출물 (index.html, /assets/**)
  web:
    resources:
      static-locations:
        - file:C:/video-streaming-over-quic/vsoq.react.auth/

  # Gateway Route 설정
  cloud:
    gateway:
      server:
        webflux:
          globalcors:
            # 프리플라이트가 라우트에 안 걸려도 처리되게
            add-to-simple-url-handler-mapping: true
            cors-configurations:
              '[/**]':
                # ★ 운영에선 와일드카드 대신 '정확한 오리진'을 적어라
                #    (credentials=true일 때 Access-Control-Allow-Origin: * 금지)

                #  # 운영: allowedOrigins: ["https://app.example.com"]
                # allowedOrigins: (Production 전용)
                #   - "https://app.example.com"
                #   - "https://admin.example.com"

                # 개발 편의: 패턴 허용 (실제 응답은 Origin 에코) (Development 전용)
                allowedOriginPatterns:
                  - "http://localhost:*"

                allowedMethods: "*"
                allowedHeaders: "*"
                allowCredentials: true
                exposedHeaders:
                  - Content-Disposition
                  - X-Request-Id
                # CorsConfiguration.maxAge는 '초(long)'이다. 단위 문자열 X
                maxAge: 3600

          routes:
            # Spring Authentication Server 로그인 폼 제공 엔드포인트 라우트
#            - id: sas_login_form
#              uri: http://localhost:9000
#              uri: forward:/index.html
#              order: 0
#              predicates:
#                - Path=/auth/login
#              filters:
#                - SetPath=/index.html

            ## Spring Authentication Server 인증 엔드포인트 라우트
            - id: authn_endpoints
              uri: http://localhost:9000
              order: 1
              predicates:
                - Path=/oauth2/**, /connect/**, /userinfo, /web/login, /logout

            # BFF WEB OIDC
            - id: bff_web_oidc
              uri: http://localhost:8079
              order: 2
              predicates:
                - Path=/bff/web/login, /bff/web/callback




eureka:
  client:
    enabled: false
    register-with-eureka: false
    fetch-registry: false

server:
  port: 8080

logging:
  level:
    # Gateway core
    org.springframework.cloud.gateway: DEBUG
    # Reactor Netty HTTP 서버/클라이언트 (실제 네트워크 레벨)
    reactor.netty.http.server: DEBUG
    reactor.netty.http.client: DEBUG
    # Spring WebFlux 핸들러
    org.springframework.web: DEBUG
    # Security 처리
    org.springframework.security: DEBUG
    # (Optional) 전체 로그 TRACE
    # ROOT: DEBUG`