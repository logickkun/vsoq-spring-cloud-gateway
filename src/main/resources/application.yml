spring:
  application:
    name: spring-cloud-gateway

  # Vite 빌드 산출물 (index.html, /assets/**)
  web:
    resources:
      static-locations:
        - file:C:/video-streaming-over-quic/vsoq.react.auth/

  # Gateway Route 설정
  cloud:
    gateway:
      server:
        webflux:
          globalcors:
            # 프리플라이트가 라우트에 안 걸려도 처리되게
            add-to-simple-url-handler-mapping: true
            cors-configurations:
              '[/**]':
                # ★ 운영에선 와일드카드 대신 '정확한 오리진'을 적어라
                #    (credentials=true일 때 Access-Control-Allow-Origin: * 금지)

                #  # 운영: allowedOrigins: ["https://app.example.com"]
                # allowedOrigins: (Production 전용)
                #   - "https://app.example.com"
                #   - "https://admin.example.com"

                # 개발 편의: 패턴 허용 (실제 응답은 Origin 에코) (Development 전용)
                allowedOriginPatterns:
                  - "http://localhost:*"

                allowedMethods: "*"
                allowedHeaders: "*"
                allowCredentials: true
                exposedHeaders:
                  - Content-Disposition
                  - X-Request-Id
                # CorsConfiguration.maxAge는 '초(long)'이다. 단위 문자열 X
                maxAge: 3600

          routes:
            # 1) BFF (웹/모바일/프록시 모두 여기서 시작)
            - id: bff
              uri: http://localhost:8079
              order: 1
              predicates:
                - Path=/bff/**

            # 2) 인증서버(AuthN) - OIDC 표준 엔드포인트
            - id: authn
              uri: http://localhost:9000
              order: 2
              predicates:
                - Path=/oauth2/**, /connect/**, /login, /userinfo


            # SPA 폴백
            - id: spa_fallback
              uri: forward:/index.html
              order: 3
              predicates:
                - Path=/login


  security:
    oauth2:
      resourceserver:
        jwt:
          # 게이트웨이에서 oauth2ResourceServer().jwt()를 켰다면, JWKS 위치가 있어야 함. 없으면 시작 시 실패.
          jwk-set-uri: http://localhost:8082/.well-known/jwks.json

eureka:
  client:
    enabled: false
    register-with-eureka: false
    fetch-registry: false

server:
  port: 8080

logging:
  level:
    # Gateway core
    org.springframework.cloud.gateway: DEBUG
    # Reactor Netty HTTP 서버/클라이언트 (실제 네트워크 레벨)
    reactor.netty.http.server: DEBUG
    reactor.netty.http.client: DEBUG
    # Spring WebFlux 핸들러
    org.springframework.web: DEBUG
    # Security 처리
    org.springframework.security: DEBUG
    # (Optional) 전체 로그 TRACE
    # ROOT: DEBUG`